/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import controller.vehiculoController;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author isaac
 */
public class crearCoche extends javax.swing.JFrame {

    private vehiculoController vehiculoCrtl;

    public crearCoche() {
        initComponents();
        setTitle("Creacion Coches");
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        setLocationRelativeTo(null);
        setResizable(false);

        vehiculoCrtl = new vehiculoController();
        cargarMarcas();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtMatricula = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtyear = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        cbxMarca = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        txtModelo = new javax.swing.JTextField();
        btnAceptar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("CREACION DE COCHES");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 18;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(19, 127, 0, 0);
        jPanel1.add(jLabel1, gridBagConstraints);

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("Matricula:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(34, 94, 0, 0);
        jPanel1.add(jLabel4, gridBagConstraints);

        txtMatricula.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtMatriculaKeyTyped(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 10;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 25;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 87;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(34, 18, 0, 0);
        jPanel1.add(txtMatricula, gridBagConstraints);

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setText("Año");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(31, 103, 0, 0);
        jPanel1.add(jLabel5, gridBagConstraints);

        txtyear.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtyearKeyTyped(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 32;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 118;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(31, 10, 0, 0);
        jPanel1.add(txtyear, gridBagConstraints);

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setText("Marca:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(32, 92, 0, 0);
        jPanel1.add(jLabel6, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 8;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(32, 18, 0, 0);
        jPanel1.add(cbxMarca, gridBagConstraints);

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setText("Modelo:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(28, 82, 0, 0);
        jPanel1.add(jLabel7, gridBagConstraints);

        txtModelo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtModeloKeyTyped(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.gridwidth = 32;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 110;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(28, 18, 0, 0);
        jPanel1.add(txtModelo, gridBagConstraints);

        btnAceptar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnAceptar.setText("ACEPTAR");
        btnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(113, 65, 49, 0);
        jPanel1.add(btnAceptar, gridBagConstraints);

        btnCancelar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnCancelar.setText("CANCELAR");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 17;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.gridwidth = 33;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(113, 12, 49, 112);
        jPanel1.add(btnCancelar, gridBagConstraints);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarActionPerformed
        // TODO add your handling code here:
        try {
            if (!validarCampos()) {
                return;
            }

            String matricula = txtMatricula.getText().trim();

            // Validar que la matricula tenga el formato correcto
            if (!validarMatricula(matricula)) {
                JOptionPane.showMessageDialog(this, "La matricula debe tener 3 letras seguidas de 4 numeros.", "Error de Validacion", JOptionPane.ERROR_MESSAGE);
                return; // Salir del metodo si la matricula no es valida
            }
            int año = -1;
            if (!txtyear.getText().isEmpty()) {
                año = Integer.parseInt(txtyear.getText());
                // Verificar el año  2000-2024
                if (año < 2000 || año > 2024) {
                    JOptionPane.showMessageDialog(this, "El año debe estar entre 2000 y 2024.", "Año fuera de rango", JOptionPane.WARNING_MESSAGE);
                    return;
                }
            }
            String marca = cbxMarca.getSelectedItem() != null ? cbxMarca.getSelectedItem().toString() : "";
            String modelo = txtModelo.getText().trim();
            if (!verificaPalabras(modelo)) {
                JOptionPane.showMessageDialog(this, "El modelo contiene palabras no permitidas");
                return;
            }

            vehiculoCrtl.registroVehiculo(matricula, año, marca, modelo);

            // Mostrar mensaje de exito
            JOptionPane.showMessageDialog(this, "Vehiculo registrado correctamente.", "Exito", JOptionPane.INFORMATION_MESSAGE);

            limpiar();

        } catch (Exception e) {
            System.out.println("Error al ingresar el vehiculo: " + e.getMessage());
        }
    }//GEN-LAST:event_btnAceptarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // TODO add your handling code here:

        int opcion = JOptionPane.showConfirmDialog(null, "¿Estas seguro de cancelar? Se perderan los datos ingresados.",
                "Confirmar Cancelar", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);

        if (opcion == JOptionPane.YES_OPTION) {
            // Si el usuario selecciona Sí, limpia los campos
            txtMatricula.setText("");
            txtModelo.setText("");
            txtyear.setText("");
            cbxMarca.setSelectedIndex(0);

        } else {
            // Si el usuario selecciona No, no hace nada y mantiene los datos actuales
            System.out.println("Cancelacion abortada. Los datos permanecen.");
        }
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void txtyearKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtyearKeyTyped
        // TODO add your handling code here:
        String regx = "^[0-9]+$";

        char caracter = evt.getKeyChar();

        if (!Character.toString(caracter).matches(regx)) {
            evt.consume();
        }

        if (txtyear.getText().length() >= 4) {
            evt.consume();

        }
    }//GEN-LAST:event_txtyearKeyTyped

    private void txtMatriculaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMatriculaKeyTyped
        // TODO add your handling code here:

        String regx = "^[a-zA-Z0-9]+$";
        String texto = txtMatricula.getText();

        char caracter = evt.getKeyChar();

        if (!Character.toString(caracter).matches(regx)) {
            evt.consume(); // Consume el evento si el caracter no es valido
        }

        // Limitar el texto a 7 caracteres
        if (txtMatricula.getText().length() >= 7) {
            evt.consume(); // Consume el evento si se alcanza el limite de caracteres
        }
    }//GEN-LAST:event_txtMatriculaKeyTyped

    private void txtModeloKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtModeloKeyTyped
        // TODO add your handling code here:
        String regx = "^[\\p{L}0-9 .'-]+$";
        String texto = txtModelo.getText();

        char caracter = evt.getKeyChar();

        if (!Character.toString(caracter).matches(regx)) {
            evt.consume(); // Consume el evento si el caracter no es valido
        }

        // Limitar el texto a 7 caracteres
        if (txtModelo.getText().length() >= 10) {
            evt.consume(); // Consume el evento si se alcanza el limite de caracteres
        }
    }//GEN-LAST:event_txtModeloKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(crearCoche.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(crearCoche.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(crearCoche.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(crearCoche.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new crearCoche().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAceptar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JComboBox<String> cbxMarca;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField txtMatricula;
    private javax.swing.JTextField txtModelo;
    private javax.swing.JTextField txtyear;
    // End of variables declaration//GEN-END:variables
public boolean validarCampos() {
        if (txtMatricula.getText().isEmpty() || txtModelo.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Por favor, complete todos los campos de texto.", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        if (txtyear.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Por favor, complete todos los campos", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        return true;
    }

    public void limpiar() {
        txtMatricula.setText("");
        txtModelo.setText("");
        txtyear.setText("");

    }

    public void cargarMarcas() {
        try {
            List<String> marcar = vehiculoCrtl.obtenerMarcas();
            marcar.add(0, "");

            for (String marc : marcar) {
                cbxMarca.addItem(marc);
            }
        } catch (Exception e) {
        }

    }

    public boolean validarMatricula(String input) {
        // Expresion regular para 3 letras seguidas de 4 numeros
        String regex = "^[a-zA-Z]{3}[0-9]{4}$";

        // Verifica si el input cumple con la expresion regular
        return input.matches(regex);
    }

    public boolean verificaPalabras(String nombre) {
        //lista de palabras para SQL Malisiosas
        String[] palabrasMalisiosas = {"SELECT", "UPDATE", "INSERT", "DELETE", "DROP", "OR", "CREATE"};

        //Comparacion entre mayusculas y minusculas convertidas
        String nombreMayYMin = nombre.toUpperCase();
        //Verifico si si el contains tiene alguna palabra puesta en el arreglo
        for (String palabra : palabrasMalisiosas) {
            if (nombreMayYMin.contains(palabra)) {
                return false;
            }
        }
        return true;
    }

}
