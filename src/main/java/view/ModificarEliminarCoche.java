/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import controller.vehiculoController;
import java.util.List;
import javax.swing.JOptionPane;
import model.vehiculo;

/**
 *
 * @author isaac
 */
public class ModificarEliminarCoche extends javax.swing.JFrame {

    private vehiculoController vehiculoCtrl;

    public ModificarEliminarCoche() {
        initComponents();
        setLocationRelativeTo(null);
        setTitle("Modificacion y Eliminacion de vehiculos");
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        setResizable(false);

        vehiculoCtrl = new vehiculoController();

        tblVehiculos.setModel(vehiculoCtrl.cargarVehiculoTb());

        cargarModelos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblVehiculos = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cbxMarca = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        btnModificar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        txtMatricula = new javax.swing.JTextField();
        txtAño = new javax.swing.JTextField();
        txtModelo = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        btnLimpiar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tblVehiculos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Matricula", "Año", "Marca", "Modelo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblVehiculos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblVehiculosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblVehiculos);
        if (tblVehiculos.getColumnModel().getColumnCount() > 0) {
            tblVehiculos.getColumnModel().getColumn(0).setResizable(false);
            tblVehiculos.getColumnModel().getColumn(1).setResizable(false);
            tblVehiculos.getColumnModel().getColumn(2).setResizable(false);
            tblVehiculos.getColumnModel().getColumn(3).setResizable(false);
        }

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(51, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(63, Short.MAX_VALUE))
        );

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setText("MODIFICACION Y ELIMINACION");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setText("MATRICULA:");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setText("AÑO:");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setText("MODELO:");

        btnModificar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnModificar.setText("MODIFICAR");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        btnEliminar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnEliminar.setText("ELIMINAR");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        txtMatricula.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtMatriculaKeyTyped(evt);
            }
        });

        txtAño.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtAñoKeyTyped(evt);
            }
        });

        txtModelo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtModeloKeyTyped(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setText("MARCA:");

        btnLimpiar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnLimpiar.setText("LIMPIAR");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(0, 34, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(txtModelo, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(txtMatricula))
                            .addComponent(jLabel1)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel5))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtAño)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(cbxMarca, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(32, 32, 32))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btnModificar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnEliminar)
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(81, 81, 81)
                .addComponent(btnLimpiar)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(75, 75, 75)
                        .addComponent(jLabel2))
                    .addComponent(txtMatricula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtAño, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbxMarca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(51, 51, 51)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtModelo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnModificar)
                    .addComponent(btnEliminar))
                .addGap(18, 18, 18)
                .addComponent(btnLimpiar)
                .addGap(27, 27, 27))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblVehiculosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblVehiculosMouseClicked
        // TODO add your handling code here:
        int filaSeleccionada = tblVehiculos.getSelectedRow();

        if (filaSeleccionada != -1) {
            // Obtener los valores de la fila seleccionada
            String matricula = (String) tblVehiculos.getValueAt(filaSeleccionada, 0);
            int año = (int) tblVehiculos.getValueAt(filaSeleccionada, 1);
            String marca = (String) tblVehiculos.getValueAt(filaSeleccionada, 2);
            String modelo = (String) tblVehiculos.getValueAt(filaSeleccionada, 3);

            // Establecer los valores en los campos correspondientes
            txtMatricula.setText(matricula);
            txtAño.setText(String.valueOf(año));
            txtModelo.setText(modelo);

            //selecciona si existe en el JComboBox
            if (marca != null && cbxMarca.getItemCount() > 0) {
                // Buscamos la marca en el JComboBox
                boolean marcaEncontrada = false;
                for (int i = 0; i < cbxMarca.getItemCount(); i++) {
                    String itemMarca = (String) cbxMarca.getItemAt(i);
                    if (itemMarca != null && itemMarca.trim().equalsIgnoreCase(marca.trim())) {
                        cbxMarca.setSelectedIndex(i);  // Seleccionar la marca en el JComboBox
                        marcaEncontrada = true;
                        break;
                    }
                }
                if (!marcaEncontrada) {
                    cbxMarca.addItem(marca);  // Agregar la marca al JComboBox
                    cbxMarca.setSelectedItem(marca);  // Luego seleccionarla
                }
            }
        }
    }//GEN-LAST:event_tblVehiculosMouseClicked

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        // TODO add your handling code here:
        txtMatricula.setText("");
        txtAño.setText("");
        cbxMarca.setSelectedIndex(0);
        txtModelo.setText("");

        tblVehiculos.clearSelection();
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
        int filaSeleccionada = tblVehiculos.getSelectedRow();
        if (filaSeleccionada == -1) {
            JOptionPane.showMessageDialog(this, "Por favor, seleccione un vehiculo de la tabla para eliminar.");
            return;
        }

        int columnaDeMatricula = 0; // Cambia esto al índice real de la columna de matricula
        String matricula = tblVehiculos.getValueAt(filaSeleccionada, columnaDeMatricula).toString();

        int respuesta = JOptionPane.showConfirmDialog(this, "¿Estas seguro de que desea eliminar este vehiculo?", "Confirmacion", JOptionPane.YES_NO_OPTION);

        if (respuesta == JOptionPane.YES_OPTION) {
            // Llama al metodo de eliminacion del controlador
            boolean eliminado = vehiculoCtrl.eliminarVehiculo(matricula);

            if (eliminado) {
                JOptionPane.showMessageDialog(this, "Vehiculo eliminado exitosamente.");

                // Recargar los datos en la tabla despues de la eliminacion
                tblVehiculos.setModel(vehiculoCtrl.cargarVehiculoTb());

                // Limpiar los campos
                txtMatricula.setText("");
                txtAño.setText("");
                cbxMarca.setSelectedIndex(0);
                txtModelo.setText("");

                tblVehiculos.clearSelection();
            } else {
                JOptionPane.showMessageDialog(this, "No se pudo eliminar el vehiculo. Verifique la matricula e intente nuevamente.");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Eliminacion cancelada.");
        }

    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        // TODO add your handling code here:
        if (txtMatricula.getText().isEmpty() || txtAño.getText().isEmpty() || txtModelo.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Por favor, complete todos los campos.");
            return;
        }
        

        String matricula = txtMatricula.getText();
        if (!matricula.matches("^[A-Z]{3}\\d{4}$")) {
            JOptionPane.showMessageDialog(this, "La matricula debe tener el formato correcto: tres letras seguidas de cuatro numeros (ejemplo: ABC1234).");
            return;
        }

        int año;
        try {
            año = Integer.parseInt(txtAño.getText());
            if (año < 2000 || año > 2024) {
                JOptionPane.showMessageDialog(this, "El año debe estar entre 2000 y 2024.");
                return;
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Por favor, ingrese un año valido.");
            return;
        }
        
        String modelo = txtModelo.getText().trim();
        if (!verificaPalabras(modelo)) {
            JOptionPane.showMessageDialog(this, "El modelo contiene palabras no permitidas");
        return;
        }

        int respuesta = JOptionPane.showConfirmDialog(this, "¿Estas seguro de que desea actualizar el vehiculo?", "Confirmacion", JOptionPane.YES_NO_OPTION);
        if (respuesta != JOptionPane.YES_OPTION) {
            return;
        }

        vehiculo vehiculo = new vehiculo();
        vehiculo.setMatricula(matricula);
        vehiculo.setAño(año);
        vehiculo.setMarca(cbxMarca.getSelectedItem().toString());
        vehiculo.setModelo(modelo);

        boolean actualizado = vehiculoCtrl.actualizarVehiculo(vehiculo);

        if (actualizado) {
            JOptionPane.showMessageDialog(this, "Vehiculo actualizado exitosamente.");
            tblVehiculos.setModel(vehiculoCtrl.cargarVehiculoTb());

            txtMatricula.setText("");
            txtAño.setText("");
            cbxMarca.setSelectedIndex(0);
            txtModelo.setText("");
        } else {
            JOptionPane.showMessageDialog(this, "No se pudo actualizar el vehiculo. Verifique los datos e intente nuevamente.");
        }
    }//GEN-LAST:event_btnModificarActionPerformed

    private void txtMatriculaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMatriculaKeyTyped
        // TODO add your handling code here:
        String regx = "^[a-zA-Z0-9]+$";
        String texto = txtMatricula.getText();

        char caracter = evt.getKeyChar();

        if (!Character.toString(caracter).matches(regx)) {
            evt.consume(); // Consume el evento si el caracter no es valido
        }

        // Limitar el texto a 9 caracteres
        if (txtMatricula.getText().length() >= 7) {
            evt.consume(); // Consume el evento si se alcanza el limite de caracteres
        }
    }//GEN-LAST:event_txtMatriculaKeyTyped

    private void txtAñoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAñoKeyTyped
        // TODO add your handling code here:
        String regx = "^[0-9]+$";

        char caracter = evt.getKeyChar();

        if (!Character.toString(caracter).matches(regx)) {
            evt.consume();
        }

        if (txtAño.getText().length() >= 4) {
            evt.consume();

        }
    }//GEN-LAST:event_txtAñoKeyTyped

    private void txtModeloKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtModeloKeyTyped
        // TODO add your handling code here:
        String regx = "^[\\p{L}0-9 .'-]+$";
        String texto = txtModelo.getText();

        char caracter = evt.getKeyChar();

        if (!Character.toString(caracter).matches(regx)) {
            evt.consume(); // Consume el evento si el caracter no es valido
        }

        // Limitar el texto a 9 caracteres
        if (txtModelo.getText().length() >= 10) {
            evt.consume(); // Consume el evento si se alcanza el limite de caracteres
        }
    }//GEN-LAST:event_txtModeloKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ModificarEliminarCoche.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ModificarEliminarCoche.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ModificarEliminarCoche.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ModificarEliminarCoche.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ModificarEliminarCoche().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JComboBox<String> cbxMarca;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblVehiculos;
    private javax.swing.JTextField txtAño;
    private javax.swing.JTextField txtMatricula;
    private javax.swing.JTextField txtModelo;
    // End of variables declaration//GEN-END:variables

    public void cargarModelos() {
        try {
            List<String> modelos = vehiculoCtrl.obtenerModelos();

            modelos.add(0, "");

            for (String model : modelos) {
                cbxMarca.addItem(model);

            }

        } catch (Exception e) {
            System.out.println("Error al cargar los modelos: " + e.getMessage());
        }

    }
    public boolean verificaPalabras(String nombre) {
        //lista de palabras para SQL Malisiosas
        String[] palabrasMalisiosas = {"SELECT", "UPDATE", "INSERT", "DELETE", "DROP", "OR", "CREATE"};

        //Comparacion entre mayusculas y minusculas convertidas
        String nombreMayYMin = nombre.toUpperCase();
        //Verifico si si el contains tiene alguna palabra puesta en el arreglo
        for (String palabra : palabrasMalisiosas) {
            if (nombreMayYMin.contains(palabra)) {
                return false;
            }
        }
        return true;
    }
}
